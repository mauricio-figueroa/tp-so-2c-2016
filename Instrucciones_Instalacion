-------------------------------IMPORTANTE------------------------------------------------------------
------------------------------------------------------------------------------------
El tp debe estar en la ruta /home/utnso/Escritorio o sea que tendremos  /home/utnso/Escritorio/tp-2016-2c-Equipo-Rocket-/

-----------------------------------------------------------------------------

link repo: https://github.com/sisoputnfrba/tp-2016-2c-Equipo-Rocket-



BIBLIOTECAS NECESARIAS PARA EL TP:

commons: https://github.com/sisoputnfrba/so-commons-library (Requerida por todos los procesos)  sudo make install

Mapa:
-ncurses: sudo apt-get update
	  sudo apt-get install ncurses-dev
-GUI:  https://github.com/sisoputnfrba/so-nivel-gui-library
	Instrucciones:
		1) Bajarlo en un directorio
		2) En el directorio padre compilar ejecutando: make && make install
		3) Ir a el directorio testnivel: cd nivel-gui-test
		4) Ejecutar el codigo de ejemplo: ./nivel 
		5) Mover un personaje con las flechas y el otro con WASD. Salir con Q

-Batallas: https://github.com/sisoputnfrba/so-pkmn-utils
	Instrucciones:
		1)cd src: Ir al directorio de la biblioteca compartida
		2)make all: Compilar la biblioteca compartida (de no utilizar nuestro makefile, recordar linkear con la biblioteca de commons)
		3)ls build/: Revisar que exista el archivo libpkmn-battle.so dentro del directorio build/
		4)sudo make install: Instala la biblioteca, para que todos tengan acceso a la misma
		5)sudo make uninstall: Desinstala la biblioteca


Una vez instaladas las commons y las necesarias del mapa, debemos compilar los proyectos

1)Primera la rocket Library, ir hasta su carpeta debug, limpiar lo que haya con make clean y compilar con make all
2)Luego hay que exportar la variable LD_LIBRARY_PATH. 
3.A) Forma larga: En consola y en el directorio home/utnso poner nano .bashrc, al final del bashrc agregar: export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/home/utnso/Escritorio/tp-2016-2c-Equipo-Rocket-/rocketLibrary/Debug
3.B)Forma corta: correr el script.sh que esta en el repo de la siguiente forma:  ". ./script.sh"  (con espacio entre los dos puntos)
4)Guardar y volver a la consola
5)Luego se compila cada proyecto yendo a la carpeta DEBUG haciendo make clean y make all
6)Para correr el pokeCliente, ejecutar con los argumentos
-d -s ./mnt --ip "localhost" --puerto 4000
7)-----IMPORTANTTISIMO 2------------------
el ejecutable se va a crear dentro de la carpeta DEBUG, por  tanto si por ejemplo el disco del filesystem esta sobre /pokedex-Servidor va a romper,
o si el entrenador o mapa esperan que el punto de montaje se ubique en ../PokeDex-Cliente
Para arreglarlo pueden hacer dentro de la carpeta DEBUG: mv "nombre_archivo" ../
---------------------------------


